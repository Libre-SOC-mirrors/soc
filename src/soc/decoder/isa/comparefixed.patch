--- comparefixed.py.orig	2020-05-15 10:02:00.087668937 -0400
+++ comparefixed.py	2020-05-15 12:32:36.834556205 -0400
@@ -85,23 +85,22 @@
         else:
             in_range = le(src21lo, src1) & le(src1, src21hi) | le(src22lo, src1) & le(
                 src1, src22hi)
-        CR[4 * BF + 32] = SelectableInt(value=0x0, bits=1)
-        CR[4 * BF + 33] = in_range
-        CR[4 * BF + 34] = SelectableInt(value=0x0, bits=1)
-        CR[4 * BF + 35] = SelectableInt(value=0x0, bits=1)
+        CR[4 * BF + 32] = SelectableInt(value=0x0, bits=1)
+        CR[4 * BF + 33] = in_range
+        CR[4 * BF + 34] = SelectableInt(value=0x0, bits=1)
+        CR[4 * BF + 35] = SelectableInt(value=0x0, bits=1)
         return (CR,)
 
     @inject()
-    def op_cmpeqb(self, RB, CR):
-        src1 = GPR[RA]
-        src1 = src1[56:64]
+    def op_cmpeqb(self, RA, RB, CR):
+        src1 = RA[56:64]
         match = eq(src1, RB[0:8]) | eq(src1, RB[8:16]) | eq(src1, RB[16:24]) | eq(src1,
             RB[24:32]) | eq(src1, RB[32:40]) | eq(src1, RB[40:48]) | eq(src1, RB[48:56]
             ) | eq(src1, RB[56:64])
-        CR[4 * BF + 32] = SelectableInt(value=0x0, bits=1)
-        CR[4 * BF + 33] = match
-        CR[4 * BF + 34] = SelectableInt(value=0x0, bits=1)
-        CR[4 * BF + 35] = SelectableInt(value=0x0, bits=1)
+        CR[4 * BF + 32] = SelectableInt(value=0x0, bits=1)
+        CR[4 * BF + 33] = match
+        CR[4 * BF + 34] = SelectableInt(value=0x0, bits=1)
+        CR[4 * BF + 35] = SelectableInt(value=0x0, bits=1)
         return (CR,)
 
     comparefixed_instrs = {}
@@ -136,7 +135,7 @@
                 form='X',
                 asmregs=[['BF', 'L', 'RA', 'RB']])
     comparefixed_instrs['cmpeqb'] = instruction_info(func=op_cmpeqb,
-                read_regs=OrderedSet(['RB']),
+                read_regs=OrderedSet(['RA', 'RB']),
                 uninit_regs=OrderedSet(), write_regs=OrderedSet(['CR']),
                 special_regs=OrderedSet(['CR']), op_fields=OrderedSet(['BF']),
                 form='X',
