--- fixedshift.py.orig	2020-05-11 10:20:55.781417649 -0400
+++ fixedshift.py	2020-05-13 16:22:30.896089413 -0400
@@ -13,7 +13,7 @@
     def op_rlwinm(self, RS):
         n = SH
         r = ROTL32(RS[32:64], n)
-        m = MASK(MB + 32, ME + 32)
+        m = MASK(MB.value + 32, ME.value + 32)
         RA = r & m
         return (RA,)
 
@@ -21,7 +21,7 @@
     def op_rlwinm_(self, RS):
         n = SH
         r = ROTL32(RS[32:64], n)
-        m = MASK(MB + 32, ME + 32)
+        m = MASK(MB.value + 32, ME.value + 32)
         RA = r & m
         return (RA,)
 
@@ -29,7 +29,7 @@
     def op_rlwnm(self, RB, RS):
         n = RB[59:64]
         r = ROTL32(RS[32:64], n)
-        m = MASK(MB + 32, ME + 32)
+        m = MASK(MB.value + 32, ME.value + 32)
         RA = r & m
         return (RA,)
 
@@ -37,7 +37,7 @@
     def op_rlwnm_(self, RB, RS):
         n = RB[59:64]
         r = ROTL32(RS[32:64], n)
-        m = MASK(MB + 32, ME + 32)
+        m = MASK(MB.value + 32, ME.value + 32)
         RA = r & m
         return (RA,)
 
@@ -45,7 +45,7 @@
     def op_rlwimi(self, RS, RA):
         n = SH
         r = ROTL32(RS[32:64], n)
-        m = MASK(MB + 32, ME + 32)
+        m = MASK(MB.value + 32, ME.value + 32)
         RA = r & m | RA & ~m
         return (RA,)
 
@@ -53,13 +53,13 @@
     def op_rlwimi_(self, RS, RA):
         n = SH
         r = ROTL32(RS[32:64], n)
-        m = MASK(MB + 32, ME + 32)
+        m = MASK(MB.value + 32, ME.value + 32)
         RA = r & m | RA & ~m
         return (RA,)
 
     @inject()
     def op_rldicl(self, RS):
-        n = sh
+        n = sh
         r = ROTL64(RS, n)
         b = concat(mb[5], mb[0:5])
         m = MASK(b, 63)
@@ -168,9 +168,9 @@
     @inject()
     def op_slw(self, RB, RS):
         n = RB[59:64]
-        r = ROTL32(RS[32:64], n)
+        r = ROTL32(RS[32:64], n.value)
         if eq(RB[58], 0):
-            m = MASK(32, 63 - n)
+            m = MASK(32, 63 - n.value)
         else:
             m = concat(0, repeat=64)
         RA = r & m
@@ -179,9 +179,9 @@
     @inject()
     def op_slw_(self, RB, RS):
         n = RB[59:64]
-        r = ROTL32(RS[32:64], n)
+        r = ROTL32(RS[32:64], n.value)
         if eq(RB[58], 0):
-            m = MASK(32, 63 - n)
+            m = MASK(32, 63 - n.value)
         else:
             m = concat(0, repeat=64)
         RA = r & m
@@ -190,9 +190,9 @@
     @inject()
     def op_srw(self, RB, RS):
         n = RB[59:64]
-        r = ROTL32(RS[32:64], 64 - n)
+        r = ROTL32(RS[32:64], 64 - n.value)
         if eq(RB[58], 0):
-            m = MASK(n + 32, 63)
+            m = MASK(n.value + 32, 63)
         else:
             m = concat(0, repeat=64)
         RA = r & m
@@ -201,9 +201,9 @@
     @inject()
     def op_srw_(self, RB, RS):
         n = RB[59:64]
-        r = ROTL32(RS[32:64], 64 - n)
+        r = ROTL32(RS[32:64], 64 - n.value)
         if eq(RB[58], 0):
-            m = MASK(n + 32, 63)
+            m = MASK(n.value + 32, 63)
         else:
             m = concat(0, repeat=64)
         RA = r & m
@@ -212,8 +212,8 @@
     @inject()
     def op_srawi(self, RS):
         n = SH
-        r = ROTL32(RS[32:64], 64 - n)
-        m = MASK(n + 32, 63)
+        r = ROTL32(RS[32:64], 64 - n.value)
+        m = MASK(n.value + 32, 63)
         s = RS[32]
         RA = r & m | concat(s, repeat=64) & ~m
         carry = s & ne((r & ~m)[32:64], 0)
@@ -224,8 +224,8 @@
     @inject()
     def op_srawi_(self, RS):
         n = SH
-        r = ROTL32(RS[32:64], 64 - n)
-        m = MASK(n + 32, 63)
+        r = ROTL32(RS[32:64], 64 - n.value)
+        m = MASK(n.value + 32, 63)
         s = RS[32]
         RA = r & m | concat(s, repeat=64) & ~m
         carry = s & ne((r & ~m)[32:64], 0)
@@ -236,9 +236,9 @@
     @inject()
     def op_sraw(self, RB, RS):
         n = RB[59:64]
-        r = ROTL32(RS[32:64], 64 - n)
+        r = ROTL32(RS[32:64], 64 - n.value)
         if eq(RB[58], 0):
-            m = MASK(n + 32, 63)
+            m = MASK(n.value + 32, 63)
         else:
             m = concat(0, repeat=64)
         s = RS[32]
@@ -251,9 +251,9 @@
     @inject()
     def op_sraw_(self, RB, RS):
         n = RB[59:64]
-        r = ROTL32(RS[32:64], 64 - n)
+        r = ROTL32(RS[32:64], 64 - n.value)
         if eq(RB[58], 0):
-            m = MASK(n + 32, 63)
+            m = MASK(n.value + 32, 63)
         else:
             m = concat(0, repeat=64)
         s = RS[32]
